
# #######################################################################################
# AUTOGENERATED HYPRLAND CONFIG.
# EDIT THIS CONFIG ACCORDING TO THE WIKI INSTRUCTIONS.
# #######################################################################################

# This is an example Hyprland config file.
# Refer to the wiki for more information.
# https://wiki.hypr.land/Configuring/

# Please note not all available settings / options are set here.
# For a full list, see the wiki

# You can split this configuration into multiple files
# Create your files separately and then link them to this file like this:
# source = ~/.config/hypr/myColors.conf


################
### MONITORS ###
################

# See https://wiki.hypr.land/Configuring/Monitors/
# Xiaomi Redmibook Pro 16 2024 with 3072x1920@165 mode
monitor = eDP-1, preferred, auto, 1.6
# Other monitors
monitor = ,preferred,auto,auto

###################
### MY PROGRAMS ###
###################

# See https://wiki.hypr.land/Configuring/Keywords/

# Set programs that you use
#$terminal = wezterm
$terminal = alacritty
$fileManager = dolphin
$menu = wofi --show drun


#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

# exec-once = $terminal
# exec-once = nm-applet &
# exec-once = waybar & hyprpaper & firefox

# Required for clipboard history integration
exec-once = hyprpm reload -n
exec-once = wl-paste --watch cliphist store

# Recommended (must install polkit-mate beforehand) for elevation prompts
exec-once = /usr/lib/mate-polkit/polkit-mate-authentication-agent-1
exec-once = systemctl --user start hyprpolkitagent
# This may be a different path on different distributions, the above is for the arch linux mate-polkit package

# Starts DankShell
exec-once = qs -c dms

# Autostart applications
exec-once = /usr/bin/wl-clip-persist --clipboard regular --reconnect-tries 0
exec-once = /w/projects/personal-notes/mount.sh "$HOME/.notes-key"

exec-once = /usr/bin/sleep 3 && /usr/bin/Telegram -startintray
exec-once = /usr/bin/sleep 4 && /opt/teams-for-linux/teams-for-linux --minimized true --ozone-platform-hint=auto
exec-once = /usr/bin/sleep 5 && /usr/lib/vesktop/vesktop --start-minimized --ozone-platform-hint=auto
exec-once = /usr/bin/sleep 6 && /usr/bin/flameshot
exec-once = /usr/bin/sleep 7 && /usr/bin/gpclient launch-gui
exec-once = /usr/bin/sleep 8 && /usr/bin/crow

#############################
### ENVIRONMENT VARIABLES ###
#############################

# See https://wiki.hypr.land/Configuring/Environment-variables/

env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24


###################
### PERMISSIONS ###
###################

# See https://wiki.hypr.land/Configuring/Permissions/
# Please note permission changes here require a Hyprland restart and are not applied on-the-fly
# for security reasons

 ecosystem {
    # Disable donation screen
    no_donation_nag = true
 }

# permission = /usr/(bin|local/bin)/grim, screencopy, allow
# permission = /usr/(lib|libexec|lib64)/xdg-desktop-portal-hyprland, screencopy, allow
# permission = /usr/(bin|local/bin)/hyprpm, plugin, allow


#####################
### LOOK AND FEEL ###
#####################

# Refer to https://wiki.hypr.land/Configuring/Variables/

# https://wiki.hypr.land/Configuring/Variables/#general
general {
    gaps_in = 3
    gaps_out = 4

    border_size = 1

    # https://wiki.hypr.land/Configuring/Variables/#variable-types for info about colors
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true

    # Please see https://wiki.hypr.land/Configuring/Tearing/ before you turn this on
    allow_tearing = false

    #layout = dwindle
    layout = hy3
}

# https://wiki.hypr.land/Configuring/Variables/#decoration
decoration {
    rounding = 5
    rounding_power = 2

    # Change transparency of focused and unfocused windows
    active_opacity = 1.0
    inactive_opacity = 1.0

    shadow {
        enabled = true
        range = 4
        render_power = 3
        color = rgba(1a1a1aee)
    }

    # https://wiki.hypr.land/Configuring/Variables/#blur
    blur {
        enabled = true
        size = 3
        passes = 1

        vibrancy = 0.1696
    }
}

# https://wiki.hypr.land/Configuring/Variables/#animations
animations {
    enabled = yes, please :)

    # Default animations, see https://wiki.hypr.land/Configuring/Animations/ for more

    bezier = easeOutQuint,0.23,1,0.32,1
    bezier = easeInOutCubic,0.65,0.05,0.36,1
    bezier = linear,0,0,1,1
    bezier = almostLinear,0.5,0.5,0.75,1.0
    bezier = quick,0.15,0,0.1,1

    animation = global, 1, 10, default
    animation = border, 1, 5.39, easeOutQuint
    animation = windows, 1, 4.79, easeOutQuint
    animation = windowsIn, 1, 4.1, easeOutQuint, popin 87%
    animation = windowsOut, 1, 1.49, linear, popin 87%
    animation = fadeIn, 1, 1.73, almostLinear
    animation = fadeOut, 1, 1.46, almostLinear
    animation = fade, 1, 3.03, quick
    animation = layers, 1, 3.81, easeOutQuint
    animation = layersIn, 1, 4, easeOutQuint, fade
    animation = layersOut, 1, 1.5, linear, fade
    animation = fadeLayersIn, 1, 1.79, almostLinear
    animation = fadeLayersOut, 1, 1.39, almostLinear
    animation = workspaces, 1, 1.94, almostLinear, fade
    animation = workspacesIn, 1, 1.21, almostLinear, fade
    animation = workspacesOut, 1, 1.94, almostLinear, fade
}

# Ref https://wiki.hypr.land/Configuring/Workspace-Rules/
# "Smart gaps" / "No gaps when only"
# uncomment all if you wish to use that.
# workspace = w[tv1], gapsout:0, gapsin:0
# workspace = f[1], gapsout:0, gapsin:0
# windowrule = bordersize 0, floating:0, onworkspace:w[tv1]
# windowrule = rounding 0, floating:0, onworkspace:w[tv1]
# windowrule = bordersize 0, floating:0, onworkspace:f[1]
# windowrule = rounding 0, floating:0, onworkspace:f[1]

# See https://wiki.hypr.land/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
}

# See https://wiki.hypr.land/Configuring/Master-Layout/ for more
master {
    new_status = master
}

# https://wiki.hypr.land/Configuring/Variables/#misc
misc {
    force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true
    disable_splash_rendering = true
    # Wake up by keypress
    key_press_enables_dpms = true
    # But don't wake up by mouse events
    mouse_move_enables_dpms = false
    # Don't render windows when lockscreen is active
	session_lock_xray = false
	# Focus window if it wants this
	focus_on_activate = true
	# Enable live reload
	disable_autoreload = false
}


#############
### INPUT ###
#############

# https://wiki.hypr.land/Configuring/Variables/#input
input {
    kb_layout = us,ru
    kb_variant =
    kb_model =
    #kb_options = grp:lctrl_lshift_toggle
    kb_options = grp:caps_toggle
    kb_rules =

    follow_mouse = 1

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        # Normal up/down scroll
        natural_scroll = true
    }
}

# https://wiki.hypr.land/Configuring/Variables/#gestures
gesture = 3, horizontal, workspace

# Example per-device config
# See https://wiki.hypr.land/Configuring/Keywords/#per-device-input-configs for more
device {
    name = epic-mouse-v1
    sensitivity = -0.5
}


plugin {
    hyprsplit {
        num_workspaces = 10
        persistent_workspaces = true
    }
    hy3 {
        tab_first_window = true
		tabs {
			border_width = 1
			col.active = rgba(33ccff20)
			col.active.border = rgba(33ccffee)
			col.inactive = rgba(30303020)
			col.inactive.border = rgba(595959aa)
			col.urgent = rgba(ff223340)
			col.urgent.border = rgba(ff2233ee)
		}
        autotile {
            enable = true
            trigger_width = 800
            trigger_height = 500
        }
    }
}

###################
### KEYBINDINGS ###
###################

# See https://wiki.hypr.land/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hypr.land/Configuring/Binds/ for more
bind = $mainMod, return, exec, $terminal
#bind = $mainMod, C, killactive,
#bind = $mainMod, C, killactive,
bind = $mainMod+SHIFT, Q, hy3:killactive
#bind = $mainMod, M, exit,
bind = $mainMod+CONTROL, M, exec, uwsm stop
#bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
#bind = $mainMod, R, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod, Tab, hy3:togglefocuslayer
#bind = $mainMod, d, hy3:makegroup, h
#bind = $mainMod, s, hy3:makegroup, v
bind = $mainMod, z, hy3:makegroup, tab

# Move focus with mainMod + arrow keys
#bind = $mainMod, left, movefocus, l
#bind = $mainMod, right, movefocus, r
#bind = $mainMod, up, movefocus, u
#bind = $mainMod, down, movefocus, d
bind = $mainMod, left, hy3:movefocus, l
bind = $mainMod, down, hy3:movefocus, d
bind = $mainMod, up, hy3:movefocus, u
bind = $mainMod, right, hy3:movefocus, r
bind = $mainMod+CONTROL, left, hy3:movefocus, l, visible, nowarp
bind = $mainMod+CONTROL, right, hy3:movefocus, r, visible, nowarp
#bind = $mainMod+CONTROL, down, hy3:movefocus, d, visible, nowarp
#bind = $mainMod+CONTROL, up, hy3:movefocus, u, visible, nowarp
bind = $mainMod+CONTROL, down, movewindow, mon:+1
bind = $mainMod+CONTROL, up, movewindow, mon:-1

bind = $mainMod+SHIFT, left, hy3:movewindow, l, once
bind = $mainMod+SHIFT, down, hy3:movewindow, d, once
bind = $mainMod+SHIFT, up, hy3:movewindow, u, once
bind = $mainMod+SHIFT, right, hy3:movewindow, r, once
bind = $mainMod+CONTROL+SHIFT, left, hy3:movewindow, l, once, visible
bind = $mainMod+CONTROL+SHIFT, down, hy3:movewindow, d, once, visible
bind = $mainMod+CONTROL+SHIFT, up, hy3:movewindow, u, once, visible
bind = $mainMod+CONTROL+SHIFT, right, hy3:movewindow, r, once, visible

# Switch workspaces with mainMod + [0-9]
#bind = $mainMod, 1, workspace, 1
#bind = $mainMod, 2, workspace, 2
#bind = $mainMod, 3, workspace, 3
#bind = $mainMod, 4, workspace, 4
#bind = $mainMod, 5, workspace, 5
#bind = $mainMod, 6, workspace, 6
#bind = $mainMod, 7, workspace, 7
#bind = $mainMod, 8, workspace, 8
#bind = $mainMod, 9, workspace, 9
#bind = $mainMod, 0, workspace, 10
bind = $mainMod, 1, split:workspace, 1
bind = $mainMod, 2, split:workspace, 2
bind = $mainMod, 3, split:workspace, 3
bind = $mainMod, 4, split:workspace, 4
bind = $mainMod, 5, split:workspace, 5
bind = $mainMod, 6, split:workspace, 6
bind = $mainMod, 7, split:workspace, 7
bind = $mainMod, 8, split:workspace, 8
bind = $mainMod, 9, split:workspace, 9
bind = $mainMod, 0, split:workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
#bind = $mainMod SHIFT, 1, movetoworkspace, 1
#bind = $mainMod SHIFT, 2, movetoworkspace, 2
#bind = $mainMod SHIFT, 3, movetoworkspace, 3
#bind = $mainMod SHIFT, 4, movetoworkspace, 4
#bind = $mainMod SHIFT, 5, movetoworkspace, 5
#bind = $mainMod SHIFT, 6, movetoworkspace, 6
#bind = $mainMod SHIFT, 7, movetoworkspace, 7
#bind = $mainMod SHIFT, 8, movetoworkspace, 8
#bind = $mainMod SHIFT, 9, movetoworkspace, 9
#bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, 1, hy3:movetoworkspace, 1, follow, wrap
bind = $mainMod SHIFT, 2, hy3:movetoworkspace, 2, follow, wrap
bind = $mainMod SHIFT, 3, hy3:movetoworkspace, 3, follow, wrap
bind = $mainMod SHIFT, 4, hy3:movetoworkspace, 4, follow, wrap
bind = $mainMod SHIFT, 5, hy3:movetoworkspace, 5, follow, wrap
bind = $mainMod SHIFT, 6, hy3:movetoworkspace, 6, follow, wrap
bind = $mainMod SHIFT, 7, hy3:movetoworkspace, 7, follow, wrap
bind = $mainMod SHIFT, 8, hy3:movetoworkspace, 8, follow, wrap
bind = $mainMod SHIFT, 9, hy3:movetoworkspace, 9, follow, wrap
bind = $mainMod SHIFT, 0, hy3:movetoworkspace, 10, follow, wrap

# Example special workspace (scratchpad)
#bind = $mainMod, S, togglespecialworkspace, magic
#bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# My shortcuts
#
# The standard clipboard manager solution is:
#
#   cliphist list | rofi -dmenu -display-columns 2 -cycle false | cliphist decode | wl-copy && hyprctl dispatch sendshortcut "SHIFT, Insert,"
#
# However, by default, shell does not interrupt the pipeline or return a non-zero exit code
# if a process in the middle of the pipeline returns one. It is possible to use '-o pipefail',
# but it is a bashism and shell might not support it even if it is in POSIX spec
# (https://github.com/koalaman/shellcheck/issues/2555). So, here we have a bit complicated version.
# We send output of 'cliphist decode' to a temporary file and then execute wl-copy only if
# cliphist succeed.
#
bind = CTRL, grave, exec, set +e; T="$(mktemp)"; cliphist list | rofi -dmenu -display-columns 2 -cycle false | cliphist decode >"$T" && wl-copy < "$T" && hyprctl dispatch sendshortcut "SHIFT, Insert,"; rm -f "$T"
bind = $mainMod, W, exec, dbus-send --type=method_call --dest=org.kde.CrowTranslate /org/kde/CrowTranslate/MainWindow org.kde.CrowTranslate.MainWindow.open
bind = $mainMod, T, exec, /usr/bin/planify.quick-add
bind = $mainMod SHIFT, T, exec, /usr/bin/planify
bind = $mainMod, N, exec, $terminal -e bash -c "nvim --cmd \"cd ~/notes\" -c \"NeovimProjectLoad ~/notes\""
bind = $mainMod SHIFT, N, exec, /usr/bin/QOwnNotes
bind = $mainMod, E, exec, GNUPGHOME=/home/kot/.kk_home/gnupg $terminal -e nvim -c NeovimProjectHistory
bind = $mainMod, space, exec, rofi -modi drun,run -show drun -show-icons -cycle false
# [OUTDATED: I don't use wezterm anymore]--always-new-process here is to ensure that wezterm doesn't use client/server mode and
# always starts a new process. This allows to pass environment variables to the process.
# Otherwise, environment variables from wezterm server (host) process will be used.
bind = $mainMod, S, exec, rofi -show ssh -no-parse-hosts -no-parse-known-hosts -ssh-command 'env _MAGIC_SSH="{host}" SHLVL= $terminal'
bind = $mainMod, C, exec, rofi -show calc -modi calc -no-show-match -no-sort -automatic-save-to-history -calc-command "echo -n '{result}' | wl-copy"

#bind = $mainMod, R, exec, /opt/teams-for-linux/teams-for-linux --minimized true --ozone-platform-hint=auto
bind = $mainMod, R, exec, /usr/lib/vesktop/vesktop --start-minimized --ozone-platform-hint=auto

bind = , Print, exec, flameshot gui

##############################
### WINDOWS AND WORKSPACES ###
##############################

# See https://wiki.hypr.land/Configuring/Window-Rules/ for more
# See https://wiki.hypr.land/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule
# windowrule = float,class:^(kitty)$,title:^(kitty)$

# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*

# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# This fix is not needed anymore. Flameshot works without it.
# flameshot multi-display fix
# https://flameshot.org/docs/guide/wayland-help/#hyprland
# https://ryanwise.me/blog/flameshot-on-hyprland/
#windowrulev2 = move 0 0,class:(flameshot),title:(flameshot)
#windowrulev2 = pin,class:(flameshot),title:(flameshot)
#windowrulev2 = fullscreenstate,class:(flameshot),title:(flameshot)
#windowrulev2 = float,class:(flameshot),title:(flameshot)

# Crow translate
windowrule = stayfocused, class:(org\.kde\.CrowTranslate)
windowrule = float, class:(org\.kde\.CrowTranslate)
# from xdg-desktop-portal
windowrule = float, class:(xdg-desktop-portal-gtk)
# GlobalProtect VPN
windowrule = float, class:(gpgui|gpauth)

debug {
    disable_logs = false
}
