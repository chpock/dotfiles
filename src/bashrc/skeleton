IAM="kk" && export IAM
IAM_HOME="$HOME/.${IAM}_home" && export IAM_HOME
SSH_PUB_KEY="ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEApJEHtvysrpZeN7xfBS5GY0JjFD8eL5UCYZFbwcUhKXKNXsjtLl9FtwA9sS0cJhqM8CSSGAcceSirACC5L5PSLckeUh2eofYlqJPBkNzU2Uycwc7CSKJRaVTY+yNAJrdpO+7fJPxzis5H3CEB6roguEr+ZqDF9BSEZ0CO8l4wTGgsmqZ2UJuEKfVpPMg6cqGCUj6NvoADavMyrOPRKVCvKikJaWd3NJK4UXueLW0pc/lNoKvbVYRyXO0VruwsAAeciPtn/M1po/iz3+pQW9fk6uM1YContqmR3Ga7TfF249cSyml2gSO8VeNoPbm3RM/KPMZ8F9eyfwQUf6bic2IRoQ== kkushnir" && export SSH_PUB_KEY
_GIT_USER_NAME="Konstantin Kushnir" && export _GIT_USER_NAME
_GIT_USER_EMAIL="chpock@gmail.com" && export _GIT_USER_EMAIL
[ -d "$IAM_HOME" ] || mkdir -p "$IAM_HOME"

if [ "$TERM" = "xterm-256color" -o "$TERM" = "tmux-256color" ] && command -v tic >/dev/null 2>&1; then
    rm -rf "$IAM_HOME/terminfo"
    mkdir "$IAM_HOME/terminfo"
    cat <<'EOF' > "$IAM_HOME/terminfo/.terminfo"
@include xterm-256color.terminfo
@include tmux-256color.terminfo
EOF
    TERMINFO="$IAM_HOME/terminfo"
    export TERMINFO
    tic "$IAM_HOME/terminfo/.terminfo" >/dev/null 2>&1 || true
fi

cat <<'EOF' > "$HOME/.tclshrc"
@include tclshrc.tcl
EOF

cat <<'EOF' > "$IAM_HOME/tmux.conf.template"
@include tmux.conf
EOF

cat <<'EOF' > "$IAM_HOME/local_tools"
@include tools.list
EOF

cat <<'EOF' > "$IAM_HOME/vimrc"
@include vimrc
EOF

# avoid issue with some overflow when the file is more than 65536 bytes
cat <<'EOF' > "$IAM_HOME/bashrc"
@include part 0 bashrc.sh
EOF
cat <<'EOF' >> "$IAM_HOME/bashrc"
@include part 1 bashrc.sh
EOF

# Magic: try to restore current directory. Only for SSH.
if [ -n "$SSH_CLIENT" ]; then
    # get win title
    printf "\033]0;__ti\007"
    read __WIN_TITLE_1
    # cursor up & erase line
    printf "\033[1A\033[K"
    __WIN_TITLE_2="${__WIN_TITLE_1#*KITTYID:}"
    # if KITTEID: found
    if [ "$__WIN_TITLE_1" != "$__WIN_TITLE_2" ]; then
        # strip quote "
        __KITTY_ID="${__WIN_TITLE_2%\"*}"
        export __KITTY_ID
    fi
    unset __WIN_TITLE_1
    unset __WIN_TITLE_2
fi

cat <<'EOF' > "$IAM_HOME/shellrc"
#!/bin/sh
if [ -x /bin/bash ]; then
    BASH_BIN=/bin/bash
elif [ -x /usr/bin/bash ]; then
    BASH_BIN=/usr/bin/bash
elif [ -x "$IAM_HOME/tools/bin/bash" ]; then
    BASH_BIN="$IAM_HOME/tools/bin/bash"
elif ! BASH_BIN="$(command -v bash 2>/dev/null)"; then
    unset BASH_BIN
    OS="$(uname -o):$(uname -m)"
    if [ "$OS" = "GNU/Linux:x86_64" -o "$OS" = "Linux:x86_64" ]; then
        [ -d "$IAM_HOME/tools/bin" ] || mkdir -p "$IAM_HOME/tools/bin"
        BASH_BIN="$IAM_HOME/tools/bin/bash"
        URL="https://github.com/chpock/dotfiles/releases/download/v0.0.0/bash-portable.5.2.21.linux.x86_64"
        if command -v curl >/dev/null 2>&1 && curl --silent -L "$URL" -o "$BASH_BIN" >/dev/null 2>&1; then
            SUCCESS=1
        elif command -v wget >/dev/null 2>&1 && wget -q -O "$BASH_BIN" "$URL" >/dev/null 2>&1; then
            SUCCESS=1
        elif [ -x /usr/lib/apt/apt-helper ] && /usr/lib/apt/apt-helper -oAcquire::https::Verify-Peer=false download-file "$URL" "$BASH_BIN" >/dev/null 2>&1; then
            SUCCESS=1
        fi
        if [ -z "$SUCCESS" ]; then
            rm -f "$BASH_BIN"
            unset BASH_BIN
        else
            chmod +x "$BASH_BIN"
            unset SUCCESS
        fi
    fi
fi
[ -z "$BASH_BIN" ] || exec "$BASH_BIN" --rcfile "$IAM_HOME/bashrc" -i
[ -z "$SHELL" ] || exec "$SHELL" -i
exec /bin/sh -i
EOF

chmod +x "$IAM_HOME/shellrc"

exec "$IAM_HOME/shellrc"
